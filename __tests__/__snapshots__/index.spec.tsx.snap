// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`index one image renders the page 1`] = `
<pages
  images={
    Array [
      Object {
        "base64": "test",
        "id": 0,
        "name": "test",
        "size": 123456,
      },
    ]
  }
>
  <IndexBase
    className="pages-j8ujus-3 cZfSDN"
    images={
      Array [
        Object {
          "base64": "test",
          "id": 0,
          "name": "test",
          "size": 123456,
        },
      ]
    }
  >
    <div
      className="pages-j8ujus-3 cZfSDN"
    >
      <gutter__Gutter>
        <GutterBase
          className="gutter__Gutter-sc-6lngpw-0 kvjPDV"
        >
          <div
            className="gutter__Gutter-sc-6lngpw-0 kvjPDV"
          >
            <pages___StyledDiv>
              <div
                className="pages___StyledDiv-j8ujus-0 buKUmK"
              >
                <searchBar__SearchBar
                  onChange={[Function]}
                  value=""
                >
                  <SearchBarBase
                    className="searchBar__SearchBar-sc-1m5ilhg-0 lcnIJe"
                    onChange={[Function]}
                    value=""
                  >
                    <div
                      className="searchBar__SearchBar-sc-1m5ilhg-0 lcnIJe"
                    >
                      <WithStyles(ForwardRef(TextField))
                        fullWidth={true}
                        label="search"
                        onChange={[Function]}
                        value=""
                        variant="filled"
                      >
                        <ForwardRef(TextField)
                          classes={
                            Object {
                              "root": "MuiTextField-root",
                            }
                          }
                          fullWidth={true}
                          label="search"
                          onChange={[Function]}
                          value=""
                          variant="filled"
                        >
                          <WithStyles(ForwardRef(FormControl))
                            className="MuiTextField-root"
                            color="primary"
                            disabled={false}
                            error={false}
                            fullWidth={true}
                            required={false}
                            variant="filled"
                          >
                            <ForwardRef(FormControl)
                              className="MuiTextField-root"
                              classes={
                                Object {
                                  "fullWidth": "MuiFormControl-fullWidth",
                                  "marginDense": "MuiFormControl-marginDense",
                                  "marginNormal": "MuiFormControl-marginNormal",
                                  "root": "MuiFormControl-root",
                                }
                              }
                              color="primary"
                              disabled={false}
                              error={false}
                              fullWidth={true}
                              required={false}
                              variant="filled"
                            >
                              <div
                                className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                              >
                                <WithStyles(ForwardRef(InputLabel))>
                                  <ForwardRef(InputLabel)
                                    classes={
                                      Object {
                                        "animated": "MuiInputLabel-animated",
                                        "asterisk": "MuiInputLabel-asterisk",
                                        "disabled": "Mui-disabled",
                                        "error": "Mui-error",
                                        "filled": "MuiInputLabel-filled",
                                        "focused": "Mui-focused",
                                        "formControl": "MuiInputLabel-formControl",
                                        "marginDense": "MuiInputLabel-marginDense",
                                        "outlined": "MuiInputLabel-outlined",
                                        "required": "Mui-required",
                                        "root": "MuiInputLabel-root",
                                        "shrink": "MuiInputLabel-shrink",
                                      }
                                    }
                                  >
                                    <WithStyles(ForwardRef(FormLabel))
                                      className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                      classes={
                                        Object {
                                          "asterisk": "MuiInputLabel-asterisk",
                                          "disabled": "Mui-disabled",
                                          "error": "Mui-error",
                                          "focused": "Mui-focused",
                                          "required": "Mui-required",
                                        }
                                      }
                                      data-shrink={false}
                                    >
                                      <ForwardRef(FormLabel)
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                        classes={
                                          Object {
                                            "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                            "colorSecondary": "MuiFormLabel-colorSecondary",
                                            "disabled": "Mui-disabled Mui-disabled",
                                            "error": "Mui-error Mui-error",
                                            "filled": "MuiFormLabel-filled",
                                            "focused": "Mui-focused Mui-focused",
                                            "required": "Mui-required Mui-required",
                                            "root": "MuiFormLabel-root",
                                          }
                                        }
                                        data-shrink={false}
                                      >
                                        <label
                                          className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-filled"
                                          data-shrink={false}
                                        >
                                          search
                                        </label>
                                      </ForwardRef(FormLabel)>
                                    </WithStyles(ForwardRef(FormLabel))>
                                  </ForwardRef(InputLabel)>
                                </WithStyles(ForwardRef(InputLabel))>
                                <WithStyles(ForwardRef(FilledInput))
                                  autoFocus={false}
                                  fullWidth={true}
                                  multiline={false}
                                  onChange={[Function]}
                                  value=""
                                >
                                  <ForwardRef(FilledInput)
                                    autoFocus={false}
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiFilledInput-adornedEnd",
                                        "adornedStart": "MuiFilledInput-adornedStart",
                                        "colorSecondary": "MuiFilledInput-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "error": "Mui-error",
                                        "focused": "Mui-focused",
                                        "input": "MuiFilledInput-input",
                                        "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                        "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                        "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                        "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                        "inputMultiline": "MuiFilledInput-inputMultiline",
                                        "marginDense": "MuiFilledInput-marginDense",
                                        "multiline": "MuiFilledInput-multiline",
                                        "root": "MuiFilledInput-root",
                                        "underline": "MuiFilledInput-underline",
                                      }
                                    }
                                    fullWidth={true}
                                    multiline={false}
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <WithStyles(ForwardRef(InputBase))
                                      autoFocus={false}
                                      classes={
                                        Object {
                                          "adornedEnd": "MuiFilledInput-adornedEnd",
                                          "adornedStart": "MuiFilledInput-adornedStart",
                                          "colorSecondary": "MuiFilledInput-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "error": "Mui-error",
                                          "focused": "Mui-focused",
                                          "input": "MuiFilledInput-input",
                                          "inputAdornedEnd": "MuiFilledInput-inputAdornedEnd",
                                          "inputAdornedStart": "MuiFilledInput-inputAdornedStart",
                                          "inputHiddenLabel": "MuiFilledInput-inputHiddenLabel",
                                          "inputMarginDense": "MuiFilledInput-inputMarginDense",
                                          "inputMultiline": "MuiFilledInput-inputMultiline",
                                          "marginDense": "MuiFilledInput-marginDense",
                                          "multiline": "MuiFilledInput-multiline",
                                          "root": "MuiFilledInput-root MuiFilledInput-underline",
                                          "underline": null,
                                        }
                                      }
                                      fullWidth={true}
                                      inputComponent="input"
                                      multiline={false}
                                      onChange={[Function]}
                                      type="text"
                                      value=""
                                    >
                                      <ForwardRef(InputBase)
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "adornedEnd": "MuiInputBase-adornedEnd MuiFilledInput-adornedEnd",
                                            "adornedStart": "MuiInputBase-adornedStart MuiFilledInput-adornedStart",
                                            "colorSecondary": "MuiInputBase-colorSecondary MuiFilledInput-colorSecondary",
                                            "disabled": "Mui-disabled Mui-disabled",
                                            "error": "Mui-error Mui-error",
                                            "focused": "Mui-focused Mui-focused",
                                            "formControl": "MuiInputBase-formControl",
                                            "fullWidth": "MuiInputBase-fullWidth",
                                            "input": "MuiInputBase-input MuiFilledInput-input",
                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiFilledInput-inputAdornedEnd",
                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiFilledInput-inputAdornedStart",
                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel MuiFilledInput-inputHiddenLabel",
                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiFilledInput-inputMarginDense",
                                            "inputMultiline": "MuiInputBase-inputMultiline MuiFilledInput-inputMultiline",
                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                            "marginDense": "MuiInputBase-marginDense MuiFilledInput-marginDense",
                                            "multiline": "MuiInputBase-multiline MuiFilledInput-multiline",
                                            "root": "MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline",
                                          }
                                        }
                                        fullWidth={true}
                                        inputComponent="input"
                                        multiline={false}
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      >
                                        <div
                                          className="MuiInputBase-root MuiFilledInput-root MuiFilledInput-underline MuiInputBase-fullWidth MuiInputBase-formControl"
                                          onClick={[Function]}
                                        >
                                          <input
                                            aria-invalid={false}
                                            autoFocus={false}
                                            className="MuiInputBase-input MuiFilledInput-input"
                                            disabled={false}
                                            onAnimationStart={[Function]}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            required={false}
                                            type="text"
                                            value=""
                                          />
                                        </div>
                                      </ForwardRef(InputBase)>
                                    </WithStyles(ForwardRef(InputBase))>
                                  </ForwardRef(FilledInput)>
                                </WithStyles(ForwardRef(FilledInput))>
                              </div>
                            </ForwardRef(FormControl)>
                          </WithStyles(ForwardRef(FormControl))>
                        </ForwardRef(TextField)>
                      </WithStyles(ForwardRef(TextField))>
                    </div>
                  </SearchBarBase>
                </searchBar__SearchBar>
                <uploadButton__UploadButton
                  assistiveText="an error occured"
                  error={false}
                  upload={[Function]}
                >
                  <UploadButtonBase
                    assistiveText="an error occured"
                    className="uploadButton__UploadButton-f5ibtt-0 whsnG"
                    error={false}
                    upload={[Function]}
                  >
                    <div
                      className="uploadButton__UploadButton-f5ibtt-0 whsnG"
                    >
                      <WithStyles(ForwardRef(Button))
                        fullWidth={true}
                        onClick={[Function]}
                        variant="contained"
                      >
                        <ForwardRef(Button)
                          classes={
                            Object {
                              "colorInherit": "MuiButton-colorInherit",
                              "contained": "MuiButton-contained",
                              "containedPrimary": "MuiButton-containedPrimary",
                              "containedSecondary": "MuiButton-containedSecondary",
                              "containedSizeLarge": "MuiButton-containedSizeLarge",
                              "containedSizeSmall": "MuiButton-containedSizeSmall",
                              "disableElevation": "MuiButton-disableElevation",
                              "disabled": "Mui-disabled",
                              "endIcon": "MuiButton-endIcon",
                              "focusVisible": "Mui-focusVisible",
                              "fullWidth": "MuiButton-fullWidth",
                              "iconSizeLarge": "MuiButton-iconSizeLarge",
                              "iconSizeMedium": "MuiButton-iconSizeMedium",
                              "iconSizeSmall": "MuiButton-iconSizeSmall",
                              "label": "MuiButton-label",
                              "outlined": "MuiButton-outlined",
                              "outlinedPrimary": "MuiButton-outlinedPrimary",
                              "outlinedSecondary": "MuiButton-outlinedSecondary",
                              "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                              "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                              "root": "MuiButton-root",
                              "sizeLarge": "MuiButton-sizeLarge",
                              "sizeSmall": "MuiButton-sizeSmall",
                              "startIcon": "MuiButton-startIcon",
                              "text": "MuiButton-text",
                              "textPrimary": "MuiButton-textPrimary",
                              "textSecondary": "MuiButton-textSecondary",
                              "textSizeLarge": "MuiButton-textSizeLarge",
                              "textSizeSmall": "MuiButton-textSizeSmall",
                            }
                          }
                          fullWidth={true}
                          onClick={[Function]}
                          variant="contained"
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            className="MuiButton-root MuiButton-contained MuiButton-fullWidth"
                            component="button"
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible"
                            onClick={[Function]}
                            type="button"
                          >
                            <ForwardRef(ButtonBase)
                              className="MuiButton-root MuiButton-contained MuiButton-fullWidth"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="Mui-focusVisible"
                              onClick={[Function]}
                              type="button"
                            >
                              <button
                                className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-fullWidth"
                                disabled={false}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={0}
                                type="button"
                              >
                                <span
                                  className="MuiButton-label"
                                >
                                  upload
                                </span>
                                <NoSsr>
                                  <WithStyles(undefined)
                                    center={false}
                                  >
                                    <ForwardRef(TouchRipple)
                                      center={false}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child",
                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                          "ripple": "MuiTouchRipple-ripple",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                          "root": "MuiTouchRipple-root",
                                        }
                                      }
                                    >
                                      <span
                                        className="MuiTouchRipple-root"
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          component={null}
                                          exit={true}
                                        />
                                      </span>
                                    </ForwardRef(TouchRipple)>
                                  </WithStyles(undefined)>
                                </NoSsr>
                              </button>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(Button)>
                      </WithStyles(ForwardRef(Button))>
                      <input
                        accept="image/x-png,image/jpeg"
                        className="uploadButton__UploadButton-f5ibtt-0 whsnG__Input"
                        name="uploadimage"
                        onChange={[Function]}
                        type="file"
                      />
                    </div>
                  </UploadButtonBase>
                </uploadButton__UploadButton>
              </div>
            </pages___StyledDiv>
            <pages___StyledDiv2>
              <div
                className="pages___StyledDiv2-j8ujus-1 laERUu"
              >
                <WithStyles(ForwardRef(Typography))
                  variant="h4"
                >
                  <ForwardRef(Typography)
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="h4"
                  >
                    <h4
                      className="MuiTypography-root MuiTypography-h4"
                    >
                      1
                       documents
                    </h4>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
                <WithStyles(ForwardRef(Typography))
                  variant="h6"
                >
                  <ForwardRef(Typography)
                    classes={
                      Object {
                        "alignCenter": "MuiTypography-alignCenter",
                        "alignJustify": "MuiTypography-alignJustify",
                        "alignLeft": "MuiTypography-alignLeft",
                        "alignRight": "MuiTypography-alignRight",
                        "body1": "MuiTypography-body1",
                        "body2": "MuiTypography-body2",
                        "button": "MuiTypography-button",
                        "caption": "MuiTypography-caption",
                        "colorError": "MuiTypography-colorError",
                        "colorInherit": "MuiTypography-colorInherit",
                        "colorPrimary": "MuiTypography-colorPrimary",
                        "colorSecondary": "MuiTypography-colorSecondary",
                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                        "displayBlock": "MuiTypography-displayBlock",
                        "displayInline": "MuiTypography-displayInline",
                        "gutterBottom": "MuiTypography-gutterBottom",
                        "h1": "MuiTypography-h1",
                        "h2": "MuiTypography-h2",
                        "h3": "MuiTypography-h3",
                        "h4": "MuiTypography-h4",
                        "h5": "MuiTypography-h5",
                        "h6": "MuiTypography-h6",
                        "noWrap": "MuiTypography-noWrap",
                        "overline": "MuiTypography-overline",
                        "paragraph": "MuiTypography-paragraph",
                        "root": "MuiTypography-root",
                        "srOnly": "MuiTypography-srOnly",
                        "subtitle1": "MuiTypography-subtitle1",
                        "subtitle2": "MuiTypography-subtitle2",
                      }
                    }
                    variant="h6"
                  >
                    <h6
                      className="MuiTypography-root MuiTypography-h6"
                    >
                      Total size:
                       
                      120.56
                      kb
                    </h6>
                  </ForwardRef(Typography)>
                </WithStyles(ForwardRef(Typography))>
              </div>
            </pages___StyledDiv2>
            <pages___StyledDiv3>
              <div
                className="pages___StyledDiv3-j8ujus-2 hcHHJP"
              >
                <imageBox__ImageBox
                  base64="test"
                  id={0}
                  key="0"
                  name="test"
                  onDelete={[Function]}
                  size={123456}
                >
                  <ImageBoxBase
                    base64="test"
                    className="imageBox__ImageBox-q8m9m6-3 czCVpo"
                    id={0}
                    name="test"
                    onDelete={[Function]}
                    size={123456}
                  >
                    <WithStyles(ForwardRef(Paper))
                      className="imageBox__ImageBox-q8m9m6-3 czCVpo"
                      variant="elevation"
                    >
                      <ForwardRef(Paper)
                        className="imageBox__ImageBox-q8m9m6-3 czCVpo"
                        classes={
                          Object {
                            "elevation0": "MuiPaper-elevation0",
                            "elevation1": "MuiPaper-elevation1",
                            "elevation10": "MuiPaper-elevation10",
                            "elevation11": "MuiPaper-elevation11",
                            "elevation12": "MuiPaper-elevation12",
                            "elevation13": "MuiPaper-elevation13",
                            "elevation14": "MuiPaper-elevation14",
                            "elevation15": "MuiPaper-elevation15",
                            "elevation16": "MuiPaper-elevation16",
                            "elevation17": "MuiPaper-elevation17",
                            "elevation18": "MuiPaper-elevation18",
                            "elevation19": "MuiPaper-elevation19",
                            "elevation2": "MuiPaper-elevation2",
                            "elevation20": "MuiPaper-elevation20",
                            "elevation21": "MuiPaper-elevation21",
                            "elevation22": "MuiPaper-elevation22",
                            "elevation23": "MuiPaper-elevation23",
                            "elevation24": "MuiPaper-elevation24",
                            "elevation3": "MuiPaper-elevation3",
                            "elevation4": "MuiPaper-elevation4",
                            "elevation5": "MuiPaper-elevation5",
                            "elevation6": "MuiPaper-elevation6",
                            "elevation7": "MuiPaper-elevation7",
                            "elevation8": "MuiPaper-elevation8",
                            "elevation9": "MuiPaper-elevation9",
                            "outlined": "MuiPaper-outlined",
                            "root": "MuiPaper-root",
                            "rounded": "MuiPaper-rounded",
                          }
                        }
                        variant="elevation"
                      >
                        <div
                          className="MuiPaper-root imageBox__ImageBox-q8m9m6-3 czCVpo MuiPaper-elevation1 MuiPaper-rounded"
                        >
                          <imageBox___StyledDiv>
                            <div
                              className="imageBox___StyledDiv-q8m9m6-0 ldATCW"
                            >
                              <img
                                src="test"
                              />
                            </div>
                          </imageBox___StyledDiv>
                          <imageBox___StyledDiv2>
                            <div
                              className="imageBox___StyledDiv2-q8m9m6-1 gnfydI"
                            >
                              <WithStyles(ForwardRef(Typography))>
                                <ForwardRef(Typography)
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                >
                                  <p
                                    className="MuiTypography-root MuiTypography-body1"
                                  >
                                    test
                                  </p>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                              <imageBox___StyledDiv3>
                                <div
                                  className="imageBox___StyledDiv3-q8m9m6-2 cyGRuy"
                                >
                                  <WithStyles(ForwardRef(Typography))
                                    variant="body2"
                                  >
                                    <ForwardRef(Typography)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTypography-alignCenter",
                                          "alignJustify": "MuiTypography-alignJustify",
                                          "alignLeft": "MuiTypography-alignLeft",
                                          "alignRight": "MuiTypography-alignRight",
                                          "body1": "MuiTypography-body1",
                                          "body2": "MuiTypography-body2",
                                          "button": "MuiTypography-button",
                                          "caption": "MuiTypography-caption",
                                          "colorError": "MuiTypography-colorError",
                                          "colorInherit": "MuiTypography-colorInherit",
                                          "colorPrimary": "MuiTypography-colorPrimary",
                                          "colorSecondary": "MuiTypography-colorSecondary",
                                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                          "displayBlock": "MuiTypography-displayBlock",
                                          "displayInline": "MuiTypography-displayInline",
                                          "gutterBottom": "MuiTypography-gutterBottom",
                                          "h1": "MuiTypography-h1",
                                          "h2": "MuiTypography-h2",
                                          "h3": "MuiTypography-h3",
                                          "h4": "MuiTypography-h4",
                                          "h5": "MuiTypography-h5",
                                          "h6": "MuiTypography-h6",
                                          "noWrap": "MuiTypography-noWrap",
                                          "overline": "MuiTypography-overline",
                                          "paragraph": "MuiTypography-paragraph",
                                          "root": "MuiTypography-root",
                                          "srOnly": "MuiTypography-srOnly",
                                          "subtitle1": "MuiTypography-subtitle1",
                                          "subtitle2": "MuiTypography-subtitle2",
                                        }
                                      }
                                      variant="body2"
                                    >
                                      <p
                                        className="MuiTypography-root MuiTypography-body2"
                                      >
                                        size: 
                                        120.56
                                        kb
                                      </p>
                                    </ForwardRef(Typography)>
                                  </WithStyles(ForwardRef(Typography))>
                                  <WithStyles(ForwardRef(Button))
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(Button)
                                      classes={
                                        Object {
                                          "colorInherit": "MuiButton-colorInherit",
                                          "contained": "MuiButton-contained",
                                          "containedPrimary": "MuiButton-containedPrimary",
                                          "containedSecondary": "MuiButton-containedSecondary",
                                          "containedSizeLarge": "MuiButton-containedSizeLarge",
                                          "containedSizeSmall": "MuiButton-containedSizeSmall",
                                          "disableElevation": "MuiButton-disableElevation",
                                          "disabled": "Mui-disabled",
                                          "endIcon": "MuiButton-endIcon",
                                          "focusVisible": "Mui-focusVisible",
                                          "fullWidth": "MuiButton-fullWidth",
                                          "iconSizeLarge": "MuiButton-iconSizeLarge",
                                          "iconSizeMedium": "MuiButton-iconSizeMedium",
                                          "iconSizeSmall": "MuiButton-iconSizeSmall",
                                          "label": "MuiButton-label",
                                          "outlined": "MuiButton-outlined",
                                          "outlinedPrimary": "MuiButton-outlinedPrimary",
                                          "outlinedSecondary": "MuiButton-outlinedSecondary",
                                          "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                          "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                          "root": "MuiButton-root",
                                          "sizeLarge": "MuiButton-sizeLarge",
                                          "sizeSmall": "MuiButton-sizeSmall",
                                          "startIcon": "MuiButton-startIcon",
                                          "text": "MuiButton-text",
                                          "textPrimary": "MuiButton-textPrimary",
                                          "textSecondary": "MuiButton-textSecondary",
                                          "textSizeLarge": "MuiButton-textSizeLarge",
                                          "textSizeSmall": "MuiButton-textSizeSmall",
                                        }
                                      }
                                      onClick={[Function]}
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        className="MuiButton-root MuiButton-text"
                                        component="button"
                                        disabled={false}
                                        focusRipple={true}
                                        focusVisibleClassName="Mui-focusVisible"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <ForwardRef(ButtonBase)
                                          className="MuiButton-root MuiButton-text"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          component="button"
                                          disabled={false}
                                          focusRipple={true}
                                          focusVisibleClassName="Mui-focusVisible"
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <button
                                            className="MuiButtonBase-root MuiButton-root MuiButton-text"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <span
                                              className="MuiButton-label"
                                            >
                                              Delete
                                            </span>
                                            <NoSsr>
                                              <WithStyles(undefined)
                                                center={false}
                                              >
                                                <ForwardRef(TouchRipple)
                                                  center={false}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </ForwardRef(TouchRipple)>
                                              </WithStyles(undefined)>
                                            </NoSsr>
                                          </button>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(Button)>
                                  </WithStyles(ForwardRef(Button))>
                                </div>
                              </imageBox___StyledDiv3>
                            </div>
                          </imageBox___StyledDiv2>
                        </div>
                      </ForwardRef(Paper)>
                    </WithStyles(ForwardRef(Paper))>
                  </ImageBoxBase>
                </imageBox__ImageBox>
              </div>
            </pages___StyledDiv3>
          </div>
        </GutterBase>
      </gutter__Gutter>
    </div>
  </IndexBase>
</pages>
`;
